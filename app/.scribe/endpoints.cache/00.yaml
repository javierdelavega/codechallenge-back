## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - GET
    uri: api/token
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/token'
      description: 'Return a json array containing a new auth token for a new GuestUser'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"token":"10009|GP2bckYdc46A3wo7Z2TAUQlgLDjSc65jiLlOHWUZ"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/user'
      description: 'Return a Json array containing the information of the user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer N7fp6GTjO9CJD1QIhqv0Ty1ZZbJeS3tFIbToFJZQ'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "name": "Javier",
           "email": "javier@smartidea.es",
           "address": "Mi dirección",
           "registered": true
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated"}'
        headers: []
        description: unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eh341dP6ZkfaDbgav6E85Vc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/login
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'POST api/user/login'
      description: |-
        Return a json array containing a new auth token for registered user.
        Checks if the email belongs to a existing domain
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer N7fp6GTjO9CJD1QIhqv0Ty1ZZbJeS3tFIbToFJZQ'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'valid email from existing domain.'
        required: true
        example: codechallenge@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: dolore
        type: string
        custom: []
    cleanBodyParameters:
      email: codechallenge@gmail.com
      password: dolore
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ "token": "34|0JJwyg6oCkEBnlAGFVOlq5f42SY9u476JSCBVUwT"}'
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated"}'
        headers: []
        description: unauthenticated
        custom: []
      -
        status: 403
        content: '{"message": "Login error"}'
        headers: []
        description: 'wrong credentials'
        custom: []
      -
        status: 422
        content: '{"message": "The password field is required."}'
        headers: []
        description: 'invalid parameters'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a46kdEPacgV8DZfe6b1vh35'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/register
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'POST api/user/register'
      description: |-
        Process a registration request.
        Checks if the email belongs to a existing domain
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer N7fp6GTjO9CJD1QIhqv0Ty1ZZbJeS3tFIbToFJZQ'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'valid email from existing domain.'
        required: true
        example: codechallenge@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: adipisci
        type: string
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: ex
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: qui
        type: string
        custom: []
    cleanBodyParameters:
      email: codechallenge@gmail.com
      password: adipisci
      name: ex
      address: qui
    fileParameters: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated"}'
        headers: []
        description: unauthenticated
        custom: []
      -
        status: 403
        content: '{"message": "Register error"}'
        headers: []
        description: 'register failed'
        custom: []
      -
        status: 422
        content: '{"message": "The password field is required."}'
        headers: []
        description: 'invalid parameters'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1VkEbgd4Pfa3c6DZva6h85e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/orders
    metadata:
      groupName: 'User management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/user/orders'
      description: 'Return a Json array containing the orders of the user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer N7fp6GTjO9CJD1QIhqv0Ty1ZZbJeS3tFIbToFJZQ'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "orders": [
             {
                 "id": 6,
                 "user_id": 104,
                 "address": "Mi dirección",
                 "total": 35,
                 "created_at": "2023-04-10T03:31:10.000000Z",
                 "updated_at": "2023-04-10T03:31:10.000000Z"
             }
           ]
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated"}'
        headers: []
        description: unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z3hV1D4Paad86gf6bEk5cve'
    controller: null
    method: null
    route: null
    custom: []
